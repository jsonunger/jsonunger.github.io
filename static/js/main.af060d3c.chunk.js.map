{"version":3,"sources":["components/List.tsx","components/ListItem.tsx","components/Italic.tsx","components/Link.tsx","Footer.tsx","PropertyComponent.tsx","getTypeOf.ts","PrimitiveComponent.tsx","ToggleComponent.tsx","ArrayComponent.tsx","ObjectComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["List","styled","ul","_templateObject","ListItem","li","ListItem_templateObject","Italic","em","Italic_templateObject","props","onClick","css","_templateObject2","Link","react_default","a","createElement","Object","assign","target","FooterWrapper","div","Footer_templateObject","FooterContent","footer","Footer_templateObject2","FooterText","p","_templateObject3","Footer","components_Link","href","PropertyComponentWrapper","span","PropertyComponent_templateObject","PropertyComponent_templateObject2","PropertyComponent","_ref","property","objectWithoutProperties","getTypeOf","obj","toString","call","split","slice","toLowerCase","colorMap","string","number","boolean","null","Value","PrimitiveComponent_templateObject","PrimitiveComponent_templateObject2","value","PrimitiveComponent","comma","Fragment","src_PropertyComponent","node","test","checkIfUrl","checkIfEmail","concat","getValue","ToggleComponentWrapper","ToggleComponent_templateObject","ToggleComponent","showExpandIcon","ArrayComponent","_useState","useState","_useState2","slicedToArray","isShowing","setIsShowing","toggle","subComponents","itemNames","forEach","val","i","arr","comp","compProps","Array","isArray","length","title","keys","push","src_ObjectComponent","src_PrimitiveComponent","components_ListItem","key","src_ToggleComponent","components_List","components_Italic","join","ObjectComponent","open","useEffect","prop","valType","src_ArrayComponent","objTitle","ResumeWrapper","App_templateObject","App","className","resume","src_Footer","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af060d3c.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n    list-style-type: none;\n    padding: 0px;\n    margin: 0px 0px 0px 24px;\n    margin-left: 1.5em;\n\n    @media (min-width: 768px) {\n        margin-left: 2em;\n    }\n`;\n\nexport default List;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ListItem = styled.li`\n    position: relative;\n`;\n\nexport default ListItem;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst Italic = styled.em`\n    ${props =>\n        props.onClick &&\n        css`\n            cursor: pointer;\n        `}\n`;\n\nexport default Italic;\n","import React from 'react';\n\nconst Link: React.FC<React.HTMLProps<HTMLAnchorElement>> = props => <a target=\"_blank\" {...props} />;\n\nexport default Link;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { Link } from './components';\n\nconst FooterWrapper = styled.div`\n    background-color: white;\n    opacity: 0.95;\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    text-align: center;\n    font-size: 12px;\n`;\n\nconst FooterContent = styled.footer`\n    padding: 8px;\n`;\n\nconst FooterText = styled.p`\n    margin-bottom: 0;\n`;\n\nconst Footer: FC = () => (\n    <FooterWrapper>\n        <FooterContent>\n            <FooterText>\n                Made using <Link href=\"https://facebook.github.io/create-react-app\">Create React App</Link>. The repo is\n                available on <Link href=\"https://github.com/jsonunger/jsonunger.github.io\">GitHub</Link>. View my resume{' '}\n                <Link href=\"/resume.pdf\">here</Link>.\n            </FooterText>\n        </FooterContent>\n    </FooterWrapper>\n);\n\nexport default Footer;\n","import React, { FC } from 'react';\nimport styled, { css } from 'styled-components';\n\nconst PropertyComponentWrapper = styled.span`\n    font-weight: bold;\n\n    ${props =>\n        props.onClick &&\n        css`\n            cursor: pointer;\n        `}\n`;\n\ninterface IProps extends Pick<React.HTMLProps<HTMLSpanElement>, 'onClick'> {\n    property: string;\n}\n\nconst PropertyComponent: FC<IProps> = ({ property, ...props }) => (\n    <PropertyComponentWrapper {...props}>{property}</PropertyComponentWrapper>\n);\n\nexport default PropertyComponent;\n","const getTypeOf = (obj: string | number | boolean | null) => {\n    return {}.toString\n        .call(obj)\n        .split(' ')[1]\n        .slice(0, -1)\n        .toLowerCase();\n};\n\nexport default getTypeOf;\n","import React, { FC } from 'react';\nimport { IComponentProps } from './types';\nimport PropertyComponent from './PropertyComponent';\nimport styled, { css } from 'styled-components';\nimport getTypeOf from './getTypeOf';\nimport { Link } from './components';\n\nconst colorMap: Record<string, string> = {\n    string: 'green',\n    number: 'blue',\n    boolean: 'firebrick',\n    null: 'gray',\n};\nconst Value = styled.span<{ value: PossibleValueTypes }>`\n    ${props => css`\n        color: ${colorMap[getTypeOf(props.value)]};\n    `}\n`;\n\nconst checkIfUrl = (value: string) => {\n    return /^(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]\\.[^\\s]{2,})$/i.test(\n        value,\n    );\n};\nconst checkIfEmail = (value: string) => {\n    return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i.test(\n        value,\n    );\n};\nconst getValue = (value: PossibleValueTypes) => {\n    if (typeof value === 'string') {\n        let node: React.ReactNode;\n        if (checkIfUrl(value)) {\n            node = <Link href={value}>{value}</Link>;\n        } else if (checkIfEmail(value)) {\n            node = <Link href={`mailto:${value}`}>{value}</Link>;\n        } else {\n            node = value;\n        }\n        return <span>\"{node}\"</span>;\n    }\n    if (value === null) {\n        return 'null';\n    }\n    return value;\n};\n\ntype PossibleValueTypes = string | number | boolean | null;\ntype Props = IComponentProps<PossibleValueTypes>;\n\nconst PrimitiveComponent: FC<Props> = ({ value, property, comma }) => (\n    <>\n        {property ? <PropertyComponent property={property} /> : null}\n        {property ? ':' : null} <Value value={value}>{getValue(value)}</Value>\n        {comma ? ',' : null}\n    </>\n);\n\nexport default PrimitiveComponent;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nconst ToggleComponentWrapper = styled.div`\n    padding-right: 8px;\n    padding-left: 8px;\n    position: absolute;\n    top: 1px;\n    left: -1.5em;\n    cursor: pointer;\n    user-select: none;\n    -webkit-user-select: none;\n`;\n\ninterface IProps {\n    showExpandIcon: boolean;\n    onClick: React.MouseEventHandler<HTMLDivElement>;\n}\n\nconst ToggleComponent: FC<IProps> = ({ showExpandIcon, ...props }) => (\n    <ToggleComponentWrapper {...props}>\n        <strong>{showExpandIcon ? '+' : '-'}</strong>\n    </ToggleComponentWrapper>\n);\n\nexport default ToggleComponent;\n","import React, { FC, useState } from 'react';\nimport { IComponentProps } from './types';\nimport ObjectComponent from './ObjectComponent';\nimport PrimitiveComponent from './PrimitiveComponent';\nimport PropertyComponent from './PropertyComponent';\nimport ToggleComponent from './ToggleComponent';\nimport { List, ListItem, Italic } from './components';\n\ntype Props = IComponentProps<any[]>;\n\nconst ArrayComponent: FC<Props> = ({ value, property, comma }) => {\n    const [isShowing, setIsShowing] = useState(false);\n\n    const toggle = () => setIsShowing(!isShowing);\n\n    let subComponents: JSX.Element[] = [];\n    let itemNames: string[] = [];\n    value.forEach((val, i, arr) => {\n        let compProps = { value: val },\n            comp;\n        if (Array.isArray(val)) {\n            comp = <ArrayComponent {...compProps} comma={i !== arr.length - 1} />;\n        } else if (typeof val === 'object') {\n            let title = val[Object.keys(val)[0]];\n            itemNames.push(title);\n            comp = <ObjectComponent {...compProps} comma={i !== arr.length - 1} title={title} />;\n        } else {\n            comp = <PrimitiveComponent {...compProps} comma={i !== arr.length - 1} />;\n        }\n        subComponents.push(<ListItem key={i}>{comp}</ListItem>);\n    });\n\n    return (\n        <>\n            {property ? <PropertyComponent onClick={toggle} property={property} /> : null}\n            {property ? ':' : null}\n            {!!value.length && <ToggleComponent showExpandIcon={!isShowing} onClick={toggle} />} {'\\u005b'}{' '}\n            {isShowing ? (\n                <List>{subComponents}</List>\n            ) : value.length ? (\n                <Italic onClick={toggle}>{itemNames.length ? itemNames.join(', ') : '...'}</Italic>\n            ) : null}{' '}\n            {'\\u005d'}\n            {comma ? ',' : null}\n        </>\n    );\n};\n\nexport default ArrayComponent;\n","import React, { FC, useState, useEffect } from 'react';\nimport ArrayComponent from './ArrayComponent';\nimport PrimitiveComponent from './PrimitiveComponent';\nimport { IComponentProps } from './types';\nimport PropertyComponent from './PropertyComponent';\nimport ToggleComponent from './ToggleComponent';\nimport { List, ListItem, Italic } from './components';\nimport getTypeOf from './getTypeOf';\n\ninterface IProps extends IComponentProps<Record<string, any>> {\n    open?: boolean;\n    title?: string;\n}\n\nconst ObjectComponent: FC<IProps> = ({ value, property, title, comma, open }) => {\n    const [isShowing, setIsShowing] = useState(false);\n\n    useEffect(() => {\n        if (open || property === 'about') {\n            setIsShowing(true);\n        }\n    }, []);\n\n    const toggle = () => setIsShowing(!isShowing);\n\n    let subComponents: JSX.Element[] = [];\n    Object.keys(value).forEach((prop, i, arr) => {\n        let val = value[prop];\n        let valType = getTypeOf(val);\n        let comp;\n        if (valType === 'array') {\n            comp = <ArrayComponent value={val as any[]} property={prop} comma={i !== arr.length - 1} />;\n        } else if (valType === 'object') {\n            let objTitle = val[Object.keys(val)[0]];\n            comp = (\n                <ObjectComponent\n                    value={val as IProps['value']}\n                    property={prop}\n                    comma={i !== arr.length - 1}\n                    title={objTitle}\n                />\n            );\n        } else {\n            comp = <PrimitiveComponent value={val} property={prop} comma={i !== arr.length - 1} />;\n        }\n        subComponents.push(<ListItem key={i}>{comp}</ListItem>);\n    });\n\n    return (\n        <div>\n            {property ? <PropertyComponent onClick={toggle} property={property} /> : null}\n            {property ? ':' : null}\n            <ToggleComponent showExpandIcon={!isShowing} onClick={toggle} /> {'\\u007b'}{' '}\n            {isShowing ? <List>{subComponents}</List> : <Italic onClick={toggle}>{title}</Italic>} {'\\u007d'}\n            {comma ? ',' : null}\n        </div>\n    );\n};\n\nexport default ObjectComponent;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport Footer from './Footer';\nimport ObjectComponent from './ObjectComponent';\n\nimport resume from './resume.json';\n\nconst ResumeWrapper = styled.div`\n    margin: 8px;\n\n    @media (max-width: 767px) {\n        margin-right: 12px;\n    }\n`;\n\nconst App: FC = () => (\n    <div className=\"row\">\n        <ResumeWrapper>\n            <ObjectComponent value={resume} open={true} title=\"Jason's JSON Resume\" />\n        </ResumeWrapper>\n        <Footer />\n    </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface IConfig {\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config: IConfig) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config: IConfig) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: IConfig) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import 'react-app-polyfill/ie9';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        white-space: normal;\n        font-family: monospace;\n        margin-bottom: 32px;\n        font-size: 14px;\n        line-height: 1.42857143;\n    }\n\n    @media (min-width: 768px) {\n        body {\n            margin-bottom: 50px;\n        }\n    }\n`;\n\nReactDOM.render(\n    <>\n        <GlobalStyle />\n        <App />\n    </>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}