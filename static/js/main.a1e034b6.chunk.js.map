{"version":3,"sources":["Footer.tsx","PropertyComponent.tsx","PrimitiveComponent.tsx","ToggleComponent.tsx","components/List.tsx","components/ListItem.tsx","components/Italic.tsx","ArrayComponent.tsx","ObjectComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FooterWrapper","styled","div","_templateObject","FooterContent","footer","_templateObject2","FooterText","p","_templateObject3","Footer","react_default","a","createElement","href","Component","PropertyComponentWrapper","span","PropertyComponent_templateObject","props","onClick","css","PropertyComponent_templateObject2","PropertyComponent","_this$props","this","property","Object","objectWithoutProperties","colorMap","string","number","boolean","Value","PrimitiveComponent_templateObject","PrimitiveComponent_templateObject2","primitiveType","PrimitiveComponent","checkIfUrl","value","test","checkIfEmail","getValue","_this","target","concat","comma","val","src_PropertyComponent","ToggleComponentWrapper","ToggleComponent_templateObject","ToggleComponent","showExpandIcon","List","ul","List_templateObject","ListItem","li","ListItem_templateObject","Italic","em","Italic_templateObject","Italic_templateObject2","ArrayComponent","state","show","toggle","setState","subComponents","itemNames","forEach","i","arr","comp","compProps","Array","isArray","assign","length","title","keys","push","src_ObjectComponent","src_PrimitiveComponent","components_ListItem","key","src_ToggleComponent","components_List","components_Italic","join","ObjectComponent","open","_this$props2","prop","src_ArrayComponent","objTitle","ResumeWrapper","App_templateObject","App","className","resume","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1e034b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst FooterWrapper = styled.div`\n    background-color: white;\n    opacity: 0.95;\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    text-align: center;\n    font-size: 12px;\n`;\n\nconst FooterContent = styled.footer`\n    padding: 8px;\n`;\n\nconst FooterText = styled.p`\n    margin-bottom: 0;\n`;\n\nclass Footer extends Component {\n    render() {\n        return (\n            <FooterWrapper>\n                <FooterContent>\n                    <FooterText>\n                        Made using <a href=\"https://facebook.github.io/create-react-app\">Create React App</a>. The repo\n                        is available on <a href=\"https://github.com/jsonunger/jsonunger.github.io\">GitHub</a>.\n                    </FooterText>\n                </FooterContent>\n            </FooterWrapper>\n        );\n    }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\n\nconst PropertyComponentWrapper = styled.span`\n    font-weight: bold;\n\n    ${props =>\n        props.onClick &&\n        css`\n            cursor: pointer;\n        `}\n`;\n\ninterface IProps extends Pick<React.HTMLProps<HTMLSpanElement>, 'onClick'> {\n    property: string;\n}\n\nclass PropertyComponent extends Component<IProps> {\n    render() {\n        const { property, ...props } = this.props;\n        return <PropertyComponentWrapper {...props}>{property}</PropertyComponentWrapper>;\n    }\n}\n\nexport default PropertyComponent;\n","import React, { Component } from 'react';\nimport { IComponentProps } from './types';\nimport PropertyComponent from './PropertyComponent';\nimport styled, { css } from 'styled-components';\n\nconst colorMap = {\n    string: 'green',\n    number: 'blue',\n    boolean: 'firebrick',\n};\nconst Value = styled.span<{ primitiveType: string }>`\n    ${props => css`\n        color: ${colorMap[props.primitiveType as 'string' | 'number' | 'boolean']};\n    `}\n`;\n\ntype Props = IComponentProps<string | number | boolean>;\nclass PrimitiveComponent extends Component<Props> {\n    checkIfUrl = (value: string) => {\n        return /^(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]\\.[^\\s]{2,})$/i.test(\n            value,\n        );\n    };\n\n    checkIfEmail = (value: string) => {\n        return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i.test(\n            value,\n        );\n    };\n\n    getValue = (value: string | number | boolean) => {\n        if (typeof value === 'string') {\n            if (this.checkIfUrl(value)) {\n                return (\n                    <a href={value} target=\"_blank\">\n                        {value}\n                    </a>\n                );\n            }\n            if (this.checkIfEmail(value)) {\n                return (\n                    <a href={`mailto:${value}`} target=\"_blank\">\n                        {value}\n                    </a>\n                );\n            }\n        }\n        return value;\n    };\n\n    render() {\n        const { value, property, comma } = this.props;\n\n        const val = this.getValue(value);\n        return (\n            <div>\n                {property ? <PropertyComponent property={property} /> : null}\n                {property ? ':' : null} <Value primitiveType={typeof value}>\"{val}\"</Value>\n                {comma ? ',' : null}\n            </div>\n        );\n    }\n}\n\nexport default PrimitiveComponent;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst ToggleComponentWrapper = styled.div`\n    padding-right: 8px;\n    padding-left: 8px;\n    position: absolute;\n    top: 1px;\n    left: -1.5em;\n    cursor: pointer;\n    user-select: none;\n    -webkit-user-select: none;\n`;\n\ninterface IProps {\n    showExpandIcon: boolean;\n    onClick: React.MouseEventHandler<HTMLDivElement>;\n}\n\nclass ToggleComponent extends Component<IProps> {\n    render() {\n        const { showExpandIcon, ...props } = this.props;\n        return (\n            <ToggleComponentWrapper {...props}>\n                <strong>{showExpandIcon ? '+' : '-'}</strong>\n            </ToggleComponentWrapper>\n        );\n    }\n}\n\nexport default ToggleComponent;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n    list-style-type: none;\n    padding: 0px;\n    margin: 0px 0px 0px 24px;\n    margin-left: 1.5em;\n\n    @media (min-width: 768px) {\n        margin-left: 2em;\n    }\n`;\n\nexport default List;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ListItem = styled.li`\n    position: relative;\n`;\n\nexport default ListItem;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst Italic = styled.em`\n    ${props =>\n        props.onClick &&\n        css`\n            cursor: pointer;\n        `}\n`;\n\nexport default Italic;\n","import React, { Component, SFC } from 'react';\nimport { IComponentProps } from './types';\nimport ObjectComponent from './ObjectComponent';\nimport PrimitiveComponent from './PrimitiveComponent';\nimport PropertyComponent from './PropertyComponent';\nimport ToggleComponent from './ToggleComponent';\nimport { List, ListItem, Italic } from './components';\n\ntype Props = IComponentProps<any[]>;\ninterface IState {\n    show: boolean;\n}\n\nclass ArrayComponent extends Component<Props, IState> {\n    state: IState = {\n        show: false,\n    };\n\n    toggle = () => {\n        this.setState(state => ({\n            show: !state.show,\n        }));\n    };\n\n    render() {\n        const { value, property, comma } = this.props;\n        let subComponents: JSX.Element[] = [];\n        let itemNames: string[] = [];\n        value.forEach((val, i, arr) => {\n            let compProps = { value: val },\n                comp;\n            if (Array.isArray(val)) {\n                comp = <ArrayComponent {...compProps} comma={i !== arr.length - 1} />;\n            } else if (typeof val === 'object') {\n                let title = val[Object.keys(val)[0]];\n                itemNames.push(title);\n                comp = <ObjectComponent {...compProps} comma={i !== arr.length - 1} title={title} />;\n            } else {\n                comp = <PrimitiveComponent {...compProps} comma={i !== arr.length - 1} />;\n            }\n            subComponents.push(<ListItem key={i}>{comp}</ListItem>);\n        });\n\n        return (\n            <div>\n                {property ? <PropertyComponent onClick={this.toggle} property={property} /> : null}\n                {property ? ':' : null}\n                <ToggleComponent showExpandIcon={!this.state.show} onClick={this.toggle} /> {'\\u005b'}{' '}\n                {this.state.show ? (\n                    <List>{subComponents}</List>\n                ) : (\n                    <Italic onClick={this.toggle}>{itemNames.length ? itemNames.join(', ') : '...'}</Italic>\n                )}{' '}\n                {'\\u005d'}\n                {comma ? ',' : null}\n            </div>\n        );\n    }\n}\n\nexport default ArrayComponent;\n","import React, { Component } from 'react';\nimport ArrayComponent from './ArrayComponent';\nimport PrimitiveComponent from './PrimitiveComponent';\nimport { IComponentProps } from './types';\nimport PropertyComponent from './PropertyComponent';\nimport ToggleComponent from './ToggleComponent';\nimport { List, ListItem, Italic } from './components';\n\ninterface IProps extends IComponentProps<Record<string, any>> {\n    open?: boolean;\n    title?: string;\n}\ninterface IState {\n    show: boolean;\n}\n\nclass ObjectComponent extends Component<IProps, IState> {\n    state: IState = {\n        show: false,\n    };\n\n    toggle = () => {\n        this.setState(state => ({\n            show: !state.show,\n        }));\n    };\n\n    componentWillMount() {\n        const { open, property } = this.props;\n        if (open || property === 'about') this.setState({ show: true });\n    }\n\n    render() {\n        let subComponents: JSX.Element[] = [];\n        const { value, property, title, comma } = this.props;\n        Object.keys(value).forEach((prop, i, arr) => {\n            let val = value[prop],\n                comp;\n            if (Array.isArray(val)) {\n                comp = <ArrayComponent value={val as any[]} property={prop} comma={i !== arr.length - 1} />;\n            } else if (typeof val === 'object') {\n                let objTitle = val[Object.keys(val)[0]];\n                comp = (\n                    <ObjectComponent\n                        value={val as IProps['value']}\n                        property={prop}\n                        comma={i !== arr.length - 1}\n                        title={objTitle}\n                    />\n                );\n            } else {\n                comp = <PrimitiveComponent value={val} property={prop} comma={i !== arr.length - 1} />;\n            }\n            subComponents.push(<ListItem key={i}>{comp}</ListItem>);\n        });\n\n        return (\n            <div>\n                {property ? <PropertyComponent onClick={this.toggle} property={property} /> : null}\n                {property ? ':' : null}\n                <ToggleComponent showExpandIcon={!this.state.show} onClick={this.toggle} /> {'\\u007b'}{' '}\n                {this.state.show ? <List>{subComponents}</List> : <Italic onClick={this.toggle}>{title}</Italic>}{' '}\n                {'\\u007d'}\n                {comma ? ',' : null}\n            </div>\n        );\n    }\n}\n\nexport default ObjectComponent;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport Footer from './Footer';\nimport ObjectComponent from './ObjectComponent';\n\nimport resume from './resume.json';\n\nconst ResumeWrapper = styled.div`\n    margin: 8px;\n\n    @media (max-width: 767px) {\n        margin-right: 12px;\n    }\n`;\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"row\">\n                <ResumeWrapper>\n                    <ObjectComponent value={resume} open={true} title=\"Jason's JSON Resume\" />\n                </ResumeWrapper>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface IConfig {\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config: IConfig) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config: IConfig) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: IConfig) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import 'react-app-polyfill/ie9';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}